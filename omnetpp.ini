[General]
# Visualizer settings
*.visualizer.osgVisualizer.typename = "IntegratedOsgVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.typename = "SceneOsgEarthVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.mapFile = "unical.earth"

# Coordinates of the scene origin on the map
*.coordinateSystem.sceneLongitude = 16.2215deg
*.coordinateSystem.sceneLatitude = 39.3701deg


# scene visualization
*.visualizer.osgVisualizer.sceneVisualizer.clearColor = "skyblue"
*.visualizer.osgVisualizer.sceneVisualizer.sceneShading = false
*.visualizer.osgVisualizer.sceneVisualizer.sceneColor = "#000000"
*.visualizer.osgVisualizer.sceneVisualizer.sceneOpacity = 0.0
*.visualizer.osgVisualizer.sceneVisualizer.sceneImageSize = 4000m
*.visualizer.osgVisualizer.sceneVisualizer.axisLength = 2000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinX = 0m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinY = 0m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinZ = 0m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxX = 1700m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxY = 300m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxZ = 20m
#*.visualizer.osgVisualizer.sceneVisualizer.cameraManipulator = "terrain"
#*.visualizer.osgVisualizer.sceneVisualizer.fieldOfView = 90deg
*.coordinateSystem.sceneAltitude = 20m
*.coordinateSystem.sceneHeading = 169deg

# network node visualization: disable labels
*.visualizer.osgVisualizer.networkNodeVisualizer.displayModuleName = false

# mobility visualization
*.visualizer.*.mobilityVisualizer.displayMobility = true # master switch
*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.displayOrientations = true
*.visualizer.*.mobilityVisualizer.displayVelocities = true
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true
*.visualizer.*.mobilityVisualizer.animationSpeed = 1

# mobility constraint area
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 200m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 800m
**.constraintAreaMaxZ = 400m

[Config _3D_Turtle_Normal]
network = FanetGpsrNormal
# no configurator needed (there is no communication between hosts)
#**.networkConfiguratorModule = ""

#*.numHosts = 40
#*.numSybils = 0
*.host[*].osgModel = "3d/drone.ive.100.scale.0,0,90.rot"
*.sybil[*].osgModel = "3d/glider.osgb.100.scale.0,0,90.rot"

#*.host[*].mobility.typename = "MassMobility"
#*.host[*].mobility.changeInterval = 1s
#*.host[*].mobility.initialMovementHeading = uniform(0deg, 360deg)
#*.host[*].mobility.initialMovementElevation = uniform(-90deg, 90deg)
#*.host[*].mobility.angleDelta = uniform(-10deg,10deg)
#*.host[*].mobility.rotationAxisAngle = uniform(-10deg,10deg)
#*.host[*].mobility.speed = uniform(10mps,20mps)
#*.host[*].mobility.faceForward = false

*.host*.mobility.typename = "TurtleMobility"
*.host*.mobility.turtleScript = xmldoc("config.xml")
*.sybil*.mobility.typename = "TurtleMobility"
*.sybil*.mobility.turtleScript = xmldoc("config.xml")


*.host[0].numApps = 1
*.host[0].app[0].typename = "PingApp"
*.host[0].app[0].destAddr = "host[20]"
*.host[0].app[0].printPing = true

**.wlan[*].bitrate = 24Mbps
*.configurator.addStaticRoutes = false
**.netmaskRoutes = ""
**.arp.typename = "GlobalArp"

**.planarizationMode = "RNG"
**.beaconInterval = 1s

*.host*.wlan[0].typename = "AckingWirelessInterface"
*.host*.wlan[0].radio.transmitter.communicationRange = 300m
*.sybil*.wlan[0].typename = "AckingWirelessInterface"
*.sybil*.wlan[0].radio.transmitter.communicationRange = 300m

[Config _3D_Turtle_Secure]
network = FanetGpsrSecure

# no configurator needed (there is no communication between hosts)
#**.networkConfiguratorModule = ""

#*.numHosts = 40
#*.numSybils = 0
*.host[*].osgModel = "3d/drone.ive.100.scale.0,0,90.rot"
*.sybil[*].osgModel = "3d/glider.osgb.100.scale.0,0,90.rot"

#*.host[*].mobility.typename = "MassMobility"
#*.host[*].mobility.changeInterval = 1s
#*.host[*].mobility.initialMovementHeading = uniform(0deg, 360deg)
#*.host[*].mobility.initialMovementElevation = uniform(-90deg, 90deg)
#*.host[*].mobility.angleDelta = uniform(-10deg,10deg)
#*.host[*].mobility.rotationAxisAngle = uniform(-10deg,10deg)
#*.host[*].mobility.speed = uniform(10mps,20mps)
#*.host[*].mobility.faceForward = false

*.host*.mobility.typename = "TurtleMobility"
*.host*.mobility.turtleScript = xmldoc("config.xml")
*.sybil*.mobility.typename = "TurtleMobility"
*.sybil*.mobility.turtleScript = xmldoc("config.xml")


*.host[0].numApps = 1
*.host[0].app[0].typename = "PingApp"
*.host[0].app[0].destAddr = "host[20]"
*.host[0].app[0].printPing = true

**.wlan[*].bitrate = 24Mbps
*.configurator.addStaticRoutes = false
**.netmaskRoutes = ""
**.arp.typename = "GlobalArp"

**.planarizationMode = "RNG"
**.beaconInterval = 1s

*.host*.wlan[0].typename = "AckingWirelessInterface"
*.host*.wlan[0].radio.transmitter.communicationRange = 300m
*.sybil*.wlan[0].typename = "AckingWirelessInterface"
*.sybil*.wlan[0].radio.transmitter.communicationRange = 300m

[Config _3D_Mass]
network = FanetGpsrNormal
# no configurator needed (there is no communication between hosts)
#**.networkConfiguratorModule = ""

*.numHosts = 50
*.host[*].osgModel = "3d/drone.ive.100.scale.0,0,90.rot"

*.host[*].mobility.typename = "MassMobility"
*.host[*].mobility.changeInterval = 1s
*.host[*].mobility.initialMovementHeading = uniform(0deg, 360deg)
*.host[*].mobility.initialMovementElevation = uniform(-90deg, 90deg)
*.host[*].mobility.angleDelta = uniform(-10deg,10deg)
*.host[*].mobility.rotationAxisAngle = uniform(-10deg,10deg)
*.host[*].mobility.speed = uniform(10mps,20mps)
*.host[*].mobility.faceForward = false

*.host[0].numApps = 1
*.host[0].app[0].typename = "PingApp"
*.host[0].app[0].destAddr = "host[20]"
*.host[0].app[0].printPing = true

**.wlan[*].bitrate = 24Mbps
*.configurator.addStaticRoutes = false
**.netmaskRoutes = ""
**.arp.typename = "GlobalArp"

**.planarizationMode = "RNG"
**.beaconInterval = 1s

*.host*.wlan[0].typename = "AckingWirelessInterface"
*.host*.wlan[0].radio.transmitter.communicationRange = 300m

[Config _3D_Turtle_UDP]
network = FanetGpsrNormal

# no configurator needed (there is no communication between hosts)
#**.networkConfiguratorModule = ""

*.numHosts = 50
*.host[*].osgModel = "3d/drone.ive.100.scale.0,0,90.rot"

#*.host[*].mobility.typename = "MassMobility"
#*.host[*].mobility.changeInterval = 1s
#*.host[*].mobility.initialMovementHeading = uniform(0deg, 360deg)
#*.host[*].mobility.initialMovementElevation = uniform(-90deg, 90deg)
#*.host[*].mobility.angleDelta = uniform(-10deg,10deg)
#*.host[*].mobility.rotationAxisAngle = uniform(-10deg,10deg)
#*.host[*].mobility.speed = uniform(10mps,20mps)
#*.host[*].mobility.faceForward = false

*.host*.mobility.typename = "TurtleMobility"
*.host*.mobility.turtleScript = xmldoc("config.xml")

*.host[14].numApps = 1
*.host[14].app[0].typename = "UdpBasicApp"
*.host[14].app[0].destAddresses = "host[20]"
*.host[14].app[0].destPort = 5000
*.host[14].app[0].messageLength = 1000B
*.host[14].app[0].sendInterval = exponential(1s)
*.host[14].app[0].packetName = "UDPData"

*.host[20].numApps = 1
*.host[20].app[0].typename = "UdpSink"
*.host[20].app[0].localPort = 5000

**.wlan[*].bitrate = 24Mbps
*.configurator.addStaticRoutes = false
**.netmaskRoutes = ""
**.arp.typename = "GlobalArp"

**.planarizationMode = "RNG"
**.beaconInterval = 1s

*.host*.wlan[0].typename = "AckingWirelessInterface"
*.host*.wlan[0].radio.transmitter.communicationRange = 300m
